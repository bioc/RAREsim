t3p <- (Rbt3/den)*(mu) + (Abt3/den)*(1-mu) ## Probality at t
At3p <- (Rat3/den)*(1-mu) + (Aat3/den)*mu ## Probality after t
rm(den) ## remove what we used to calulate
rm(Rbt1)
rm(Abt1)
rm(Rat1)
rm(Aat1)
rm(Rbt2)
rm(Abt2)
rm(Rat2)
rm(Aat2)
rm(Rbt3)
rm(Abt3)
rm(Rat3)
rm(Aat3)
t1 <- 1
temp1 <- prod(Bt1p[which(1:S<t1)])*t1p[t1] ### everything before and at t1
t2 <- 2
temp2 <- prod(Bt2p[which(1:S>t1 & 1:S<t2)])*t2p[t2] ## t2=2
t3 <- 3
temp3 <- prod(Bt3p[which(1:S>t2 & 1:S<t3)])*t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- temp1*temp2*temp3
#### ok, done to here. t1=1, t2=2, t3-all
t2 <- 3
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, add t
t3 <- t2+1 #### why isn't it plus 1??? (this is where it messes up) (do the first on, then loop)
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2+1
}
### ok, we have all for when t1=1
t1 <- 2
while(t1 <= (S-2)){
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- (t2p[t2-1]*At2p[t2])/Bt2p[t2-1] ### set it up to get moved one over right away...
#### But then we add the Before t and we do not want it, so divide by it
######## gets complicated here...
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
t3<-t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2 + 1
}
t1 <- t1+1
}
return(all)
}
tripleton_prob(H,S,k,mu)
149/(150*151)
### ok, we have all for when t1=1
t1 <- 2
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
temp1
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- (t2p[t2-1]*At2p[t2])/Bt2p[t2-1] ### set it up to get moved one over right away...
temp2
2/152
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
temp2
t2 <- t2 + 1
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
(149*2)/(152*153)
temp2
((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2]))
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- (t2p[t2-1]*At2p[t2])/(Bt2p[t2-1]*t2p[t2-1]) ### set it up to get moved one over right away...
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
temp2
temp2 <- t2p[t2]*(t2p[t2-1]*At2p[t2])/(Bt2p[t2-1]*t2p[t2-1]) ### set it up to get moved one over right away...
t2
temp2 <- t2p[t2]*(t2p[t2-1]*At2p[t2])/(Bt2p[t2-1]*t2p[t2-1]) ### set it up to get moved one over right away...
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
temp2
t1
2/152
t2p[t2]
temp2 <- t2p[t2]*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2]))^(-1) ### set it up to get moved one over right away...
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
temp2
tripleton_prob <- function(H,S,k,mu){
den  <- seq(H, (H+S-1)) # denominator
Rbt1 <- seq((H-k),(H+S-1-k)) # Probability of drawing RA before t
Abt1 <- rep(k, length(den))  # Probability of drawing AA before t
Rat1 <- seq(H-(k+1), H+S-1-(k+1)) # Probability of drawing RA after t
Aat1 <- rep(k+1,length(den))      # Probability of drawing AA after t
Bt1p <- (Rbt1/den)*(1-mu) + (Abt1/den)*mu ## Probalities before t
t1p <- (Rbt1/den)*(mu) + (Abt1/den)*(1-mu) ## Probality at t
At1p <- (Rat1/den)*(1-mu) + (Aat1/den)*mu ## Probality after t
######## Now t2
Rbt2 <- Rbt1 - 1 # Probability of drawing RA before t2
Abt2 <- Abt1 + 1  # Probability of drawing AA before t2
Rat2 <- Rat1-1 # Probability of drawing RA after t
Aat2 <- Aat1+1      # Probability of drawing AA after t
Bt2p <- (Rbt2/den)*(1-mu) + (Abt2/den)*mu ## Probalities before t
t2p <- (Rbt2/den)*(mu) + (Abt2/den)*(1-mu) ## Probality at t
At2p <- (Rat2/den)*(1-mu) + (Aat2/den)*mu ## Probality after t
### Now t3
Rbt3 <- Rbt2 - 1 # Probability of drawing RA before t2
Abt3 <- Abt2 + 1  # Probability of drawing AA before t2
Rat3 <- Rat2-1 # Probability of drawing RA after t
Aat3 <- Aat2+1      # Probability of drawing AA after t
Bt3p <- (Rbt3/den)*(1-mu) + (Abt3/den)*mu ## Probalities before t
t3p <- (Rbt3/den)*(mu) + (Abt3/den)*(1-mu) ## Probality at t
At3p <- (Rat3/den)*(1-mu) + (Aat3/den)*mu ## Probality after t
rm(den) ## remove what we used to calulate
rm(Rbt1)
rm(Abt1)
rm(Rat1)
rm(Aat1)
rm(Rbt2)
rm(Abt2)
rm(Rat2)
rm(Aat2)
rm(Rbt3)
rm(Abt3)
rm(Rat3)
rm(Aat3)
t1 <- 1
temp1 <- prod(Bt1p[which(1:S<t1)])*t1p[t1] ### everything before and at t1
t2 <- 2
temp2 <- prod(Bt2p[which(1:S>t1 & 1:S<t2)])*t2p[t2] ## t2=2
t3 <- 3
temp3 <- prod(Bt3p[which(1:S>t2 & 1:S<t3)])*t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- temp1*temp2*temp3
#### ok, done to here. t1=1, t2=2, t3-all
t2 <- 3
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, add t
t3 <- t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2+1
}
### ok, we have all for when t1=1
t1 <- 2
while(t1 <= (S-2)){
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- t2p[t2]*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2]))^(-1) ### set it up to get moved one over right away...
#### But then we add the Before t and we do not want it, so divide by it
######## gets complicated here...
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
t3<-t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2 + 1
}
t1 <- t1+1
}
return(all)
}
tripleton_prob(H,S,k,mu)
den  <- seq(H, (H+S-1)) # denominator
Rbt1 <- seq((H-k),(H+S-1-k)) # Probability of drawing RA before t
Abt1 <- rep(k, length(den))  # Probability of drawing AA before t
Rat1 <- seq(H-(k+1), H+S-1-(k+1)) # Probability of drawing RA after t
Aat1 <- rep(k+1,length(den))      # Probability of drawing AA after t
Bt1p <- (Rbt1/den)*(1-mu) + (Abt1/den)*mu ## Probalities before t
t1p <- (Rbt1/den)*(mu) + (Abt1/den)*(1-mu) ## Probality at t
At1p <- (Rat1/den)*(1-mu) + (Aat1/den)*mu ## Probality after t
######## Now t2
Rbt2 <- Rbt1 - 1 # Probability of drawing RA before t2
Abt2 <- Abt1 + 1  # Probability of drawing AA before t2
Rat2 <- Rat1-1 # Probability of drawing RA after t
Aat2 <- Aat1+1      # Probability of drawing AA after t
Bt2p <- (Rbt2/den)*(1-mu) + (Abt2/den)*mu ## Probalities before t
t2p <- (Rbt2/den)*(mu) + (Abt2/den)*(1-mu) ## Probality at t
At2p <- (Rat2/den)*(1-mu) + (Aat2/den)*mu ## Probality after t
### Now t3
Rbt3 <- Rbt2 - 1 # Probability of drawing RA before t2
Abt3 <- Abt2 + 1  # Probability of drawing AA before t2
Rat3 <- Rat2-1 # Probability of drawing RA after t
Aat3 <- Aat2+1      # Probability of drawing AA after t
Bt3p <- (Rbt3/den)*(1-mu) + (Abt3/den)*mu ## Probalities before t
t3p <- (Rbt3/den)*(mu) + (Abt3/den)*(1-mu) ## Probality at t
At3p <- (Rat3/den)*(1-mu) + (Aat3/den)*mu ## Probality after t
rm(den) ## remove what we used to calulate
rm(Rbt1)
rm(Abt1)
rm(Rat1)
rm(Aat1)
rm(Rbt2)
rm(Abt2)
rm(Rat2)
rm(Aat2)
rm(Rbt3)
rm(Abt3)
rm(Rat3)
rm(Aat3)
t1 <- 1
temp1 <- prod(Bt1p[which(1:S<t1)])*t1p[t1] ### everything before and at t1
t2 <- 2
temp2 <- prod(Bt2p[which(1:S>t1 & 1:S<t2)])*t2p[t2] ## t2=2
t3 <- 3
temp3 <- prod(Bt3p[which(1:S>t2 & 1:S<t3)])*t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- temp1*temp2*temp3
#### ok, done to here. t1=1, t2=2, t3-all
t2 <- 3
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, add t
t3 <- t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2+1
}
### ok, we have all for when t1=1
t1 <- 2
while(t1 <= (S-2)){
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
t2
}
t1 <- 1
temp1 <- prod(Bt1p[which(1:S<t1)])*t1p[t1] ### everything before and at t1
t2 <- 2
temp2 <- prod(Bt2p[which(1:S>t1 & 1:S<t2)])*t2p[t2] ## t2=2
t3 <- 3
temp3 <- prod(Bt3p[which(1:S>t2 & 1:S<t3)])*t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- temp1*temp2*temp3
#### ok, done to here. t1=1, t2=2, t3-all
t2 <- 3
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, add t
t3 <- t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2+1
t2
t1
### ok, we have all for when t1=1
t1 <- 2
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- t2p[t2]*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2]))^(-1) ### set it up to get moved one over right away...
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
t3<-t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2 + 1
t2
t1
(300)/(152*153)
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2])) #Change the t to bt, and at to t
temp2
((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]*At2p[t2]))
t2p[t2]
t2p[t2-1]
At2p[t2]
Bt2p[t2-1]
(t2p[t2]*Bt2p[t2-1])
(t2p[t2-1]*At2p[t2])
t2p[t2]
At2p[t2]
Bt2p[t2-1]
t2p[t2-1]
temp2 <- t2p[t2]*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]))^(-1) ### set it up to get moved one over right away...
temp2
t1 <- 1
temp1 <- prod(Bt1p[which(1:S<t1)])*t1p[t1] ### everything before and at t1
t2 <- 2
temp2 <- prod(Bt2p[which(1:S>t1 & 1:S<t2)])*t2p[t2] ## t2=2
t3 <- 3
temp3 <- prod(Bt3p[which(1:S>t2 & 1:S<t3)])*t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- temp1*temp2*temp3
#### ok, done to here. t1=1, t2=2, t3-all
t2 <- 3
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, add t
t3 <- t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2+1
}
### ok, we have all for when t1=1
t1 <- 2
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- t2p[t2]*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]))^(-1) ### set it up to get moved one over right away...
temp2
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, and at to t
temp2
tripleton_prob <- function(H,S,k,mu){
den  <- seq(H, (H+S-1)) # denominator
Rbt1 <- seq((H-k),(H+S-1-k)) # Probability of drawing RA before t
Abt1 <- rep(k, length(den))  # Probability of drawing AA before t
Rat1 <- seq(H-(k+1), H+S-1-(k+1)) # Probability of drawing RA after t
Aat1 <- rep(k+1,length(den))      # Probability of drawing AA after t
Bt1p <- (Rbt1/den)*(1-mu) + (Abt1/den)*mu ## Probalities before t
t1p <- (Rbt1/den)*(mu) + (Abt1/den)*(1-mu) ## Probality at t
At1p <- (Rat1/den)*(1-mu) + (Aat1/den)*mu ## Probality after t
######## Now t2
Rbt2 <- Rbt1 - 1 # Probability of drawing RA before t2
Abt2 <- Abt1 + 1  # Probability of drawing AA before t2
Rat2 <- Rat1-1 # Probability of drawing RA after t
Aat2 <- Aat1+1      # Probability of drawing AA after t
Bt2p <- (Rbt2/den)*(1-mu) + (Abt2/den)*mu ## Probalities before t
t2p <- (Rbt2/den)*(mu) + (Abt2/den)*(1-mu) ## Probality at t
At2p <- (Rat2/den)*(1-mu) + (Aat2/den)*mu ## Probality after t
### Now t3
Rbt3 <- Rbt2 - 1 # Probability of drawing RA before t2
Abt3 <- Abt2 + 1  # Probability of drawing AA before t2
Rat3 <- Rat2-1 # Probability of drawing RA after t
Aat3 <- Aat2+1      # Probability of drawing AA after t
Bt3p <- (Rbt3/den)*(1-mu) + (Abt3/den)*mu ## Probalities before t
t3p <- (Rbt3/den)*(mu) + (Abt3/den)*(1-mu) ## Probality at t
At3p <- (Rat3/den)*(1-mu) + (Aat3/den)*mu ## Probality after t
rm(den) ## remove what we used to calulate
rm(Rbt1)
rm(Abt1)
rm(Rat1)
rm(Aat1)
rm(Rbt2)
rm(Abt2)
rm(Rat2)
rm(Aat2)
rm(Rbt3)
rm(Abt3)
rm(Rat3)
rm(Aat3)
t1 <- 1
temp1 <- prod(Bt1p[which(1:S<t1)])*t1p[t1] ### everything before and at t1
t2 <- 2
temp2 <- prod(Bt2p[which(1:S>t1 & 1:S<t2)])*t2p[t2] ## t2=2
t3 <- 3
temp3 <- prod(Bt3p[which(1:S>t2 & 1:S<t3)])*t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- temp1*temp2*temp3
#### ok, done to here. t1=1, t2=2, t3-all
t2 <- 3
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, add t
t3 <- t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2+1
}
### ok, we have all for when t1=1
t1 <- 2
while(t1 <= (S-2)){
temp1 <- temp1*((t1p[t1]*Bt1p[t1-1])/t1p[t1-1])
#multiplychange the t1p and add the next Bt1p
t2 <- t1+1
temp2 <- t2p[t2]*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1]))^(-1) ### set it up to get moved one over right away...
#### But then we add the Before t and we do not want it, so divide by it
######## gets complicated here...
while(t2 <= (S-1)){
temp2 <- temp2*((t2p[t2]*Bt2p[t2-1])/(t2p[t2-1])) #Change the t to bt, and at to t
#### why is the thing I am multiplying by 1???
t3<-t2+1
temp3 <- t3p[t3]*prod(At3p[which(1:S>t3)]) ## t3=3
tmp3 <- temp3
t3 <- t3+1
while(t3 <= S){
tmp3 <- tmp3*((t3p[t3]*Bt3p[t3-1])/(t3p[t3-1]*At3p[t3])) #Change the t to bt, and at to t
temp3 <- temp3 + tmp3
t3 <- t3+1
}
all <- all + temp1*temp2*temp3
t2 <- t2 + 1
}
t1 <- t1+1
}
return(all)
}
tripleton_prob(H,S,k,mu)
prod(prob)*161700 ##100 choose 3
0.8^5
5*0.6^4*0.4
0.7^5
5*0.3*.7^4
5*0.3*.7^4+0.16807
1.8^2
1-.125
library(devtools)
install_github('meganmichelle/RAREsim')
setwd('/Users/megansorenson/Documents/Package/RAREsim/')
document()
build()
build_manual('/Users/megansorenson/Documents/Package/RAREsim/')
install()
check() #
setwd('/Users/megansorenson/Documents/Package/RAREsim/')
document()
document()
build()
build_manual('/Users/megansorenson/Documents/Package/RAREsim/')
library(devtools)
install_github('meganmichelle/RAREsim')
setwd('/Users/megansorenson/Documents/Package/RAREsim/')
document()
build()
build_manual('/Users/megansorenson/Documents/Package/RAREsim/')
install()
library(devtools)
setwd('/Users/megansorenson/Documents/Package/RAREsim/')
document()
build()
install()
