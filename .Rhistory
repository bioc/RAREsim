mac_range <-  c(loop$Start[k]:loop$End[k])
to_change$new_MAC <- sample(mac_range, nrow(to_change),
replace = TRUE)
### change them within the MAC file.
####  this needs to change for the haplotype file!!!
rem_all <- rem_all[which(rem_all$rd > p1),]
change_all<- rbind(change_all, to_change)
}
}
length(change_all)
##### here we are done with the theoretical pruning
##### now change the haplotypes
### First, the variants that change alternate alleles
if(length(change_all)>0){
command_unzip <- paste0('gunzip Block', bl, '_rep', rep, '.controls.haps.gz')
system(command_unzip)
hap_file_name1 <- as.character(hap_file_name)
hap_file_name1 <- substr(hap_file_name1, 1, (nchar(hap_file_name1)-3))
##### change all: MAC, row #, draw, new MAC
for(ch in 1:nrow(change_all)){
n <- change_all$num #### this is the line of interest
k <- change_all$new_MAC
try <- paste0('sed -n \'', n, 'p;',
(n+1),'q\' ', hap_file_name)
ri <- system(try, intern = TRUE)
re <- unlist(strsplit(ri, split=" "))
re <- as.numeric(as.character(re))
#### find which have alternate alleles
aa <- which(re>0)
#### sample
aa_n <- sample(aa, k)
#### and now make a new row to insert into the file
ref <- seq(0, length(re)) ### not sure this works
ref[aa_n] <- 1
##### format to write into the file
ref1 <- paste(ref, collapse = ' ')
#### write to a new file
write.table(ref1, 'Text2add.txt', row.names = FALSE,
col.names = FALSE, quote = FALSE)
torun <- paste0('printf "%s\n" "', n, 'r Text2add.txt" w | ed -s ',
hap_file_name1)
system(torun)
#### and remove the 'orginal' line n
system(paste0('sed -i \'', n, 'd\' ', hap_file_name))
}
#### Remove the pruned variants
todel <- paste(rem_all$num, collapse = 'd; ')
todel <- paste0(todel,'d')
write.table(todel, 'List2delete.sed', row.names = FALSE,
col.names = FALSE, quote = FALSE)
#### delete the entire list
torun <- paste0('sed -i -f List2delete.sed ', hap_file_name1)
system(torun)
system(paste0('gzip ', hap_file_name1))
}else{
##### this needs to work witth the zipped file!
todel <- paste(rem_all$num, collapse = 'd; ')
todel <- paste0(todel,'d')
write.table(todel, 'List2delete.sed', row.names = FALSE,
col.names = FALSE, quote = FALSE)
#### delete the entire list
torun <- paste0('zcat ', hap_file_name,'| sed -i -f List2delete.sed ')
system(torun)
}
hap_file_name
torun
#### delete the entire list
torun <- paste0('zcat ', hap_file_name,' | sed -i -f List2delete.sed ')
system(torun)
torun
getwd()
##### here we are done with the theoretical pruning
##### now change the haplotypes
### First, the variants that change alternate alleles
command_unzip <- paste0('gunzip ', hap_file_name)
system(command_unzip)
hap_file_name1 <- as.character(hap_file_name)
hap_file_name1 <- substr(hap_file_name1, 1, (nchar(hap_file_name1)-3))
hap_file_name1
#### delete the entire list
torun <- paste0('sed -i -f List2delete.sed ', hap_file_name1)
system(torun)
#### delete the entire list
torun <- paste0('sed -i -f List2delete.sed \"\" ', hap_file_name1)
system(torun)
setwd('/Users/megansorenson/Documents/RAREsim/Chr19/AFS/Blocks/')
gnom <- read.table('AFS_data_blocks_merged.txt',
header =  TRUE, sep  = '\t')
setwd('/Users/megansorenson/Documents/RAREsim/Chr19/AFS/Blocks/')
afp <- read.table('AFS_blocks_fitted_and_observed.txt',
header = TRUE, sep = '\t')
#### only need the fitted
afp <- afp[,c(1,10,11,18:24)]
### Total Number of Variants
setwd("/Users/megansorenson/Documents/RAREsim/Chr19/Updated_files")
tot <- read.table('Fitted_and_Observed_downsampling_blocks.txt', header  = TRUE,
sep =  '\t')
tot$pop <- as.character(tot$pop)
tot$block <- as.numeric(tot$block)
tot$pop[which(tot$pop == 'sas')] <- 'SAS'
tot$pop[which(tot$pop == 'eas')] <- 'EAS'
tot$pop[which(tot$pop == 'nfe')] <- 'NFE'
tot$pop[which(tot$pop == 'afr')] <- 'AFR'
tot$pop <- as.character(tot$pop)
##### just do  this for the block with the median number of bp
#### Lets make a dataframe with the expected number  of variants in each bin
fit <- as.data.frame(matrix(nrow = 4, ncol = 9))
colnames(fit) <-  c('pop', 'N', colnames(afp)[4:10])
head(fit)
fit$pop <- c('AFR', 'EAS', 'NFE',  'SAS')
fit$N  <- c(8128, 9197, 56885, 15308)
fit
#### ok,  we need this for every block
block <- levels(as.factor(as.character(afp$block)))
fit_all <- c()
for(bl in block){
fit1 <- fit
for(i in 1:nrow(fit1)){
tot1 <- tot[which(tot$pop == fit1$pop[i] & tot$block == bl),]
af1 <- afp[which(afp$block == bl & afp$pop == fit1$pop[i]),]
total1 <- floor(tot1$phi[1]*(fit$N[i]^tot1$omega[1])) ### this is the  TOTAL  in the region
total  <- total1*(af1$N_bp/1000)
for(j in 3:9){
prob <- af1[1,c(j+1)]
fit1[i,j] <- prob*total
}
}
fit1$block  <- bl
fit_all <- rbind(fit_all, fit1)
}
head(fit_all)
fit_all[which(fit_all$block == 709)]
fit_all[which(fit_all$block == 70),]
expected$Expected_var <- c(273.5146, 259.74204, 115.21139, 66.31698, 74.62399,  1.709520)
expected$Expected_var <- c(906.0185, 273.5146, 259.74204, 115.21139, 66.31698, 74.62399,  1.709520)
setwd('/Users/megansorenson/Documents/RAREsim/Chr19/Updated_files/')
dff <- read.table('Number_bp_per_block.txt', header = TRUE)
setwd('/Users/megansorenson/Documents/RAREsim/Chr19/AFS/gnomAD/')
af <- c()
for(i in c('NFE', 'EAS', 'AFR', 'SAS')){
temp <- read.table(paste0(i,  '_Block_AFS_gnomAD.txt'),
header = TRUE, sep = '\t')
colnames(temp)[9:10] <- c("MAC.21.MAF0.005", 'MAF0.005.MAF0.01')
temp$pop <- i
af <- rbind(af, temp)
}
af1 <- af
head(af1)
colnames(af1)[4] <- 'MAC.3.5'
head(af1)
af1$MAC.3.5 <- af1$MAC.3.5 + af1$MAC.4.5
af1 <- af1[,-c(5)]
head(af1)
af1$MAC.11.15 <- af1$MAC.11.15 + af1$MAC.16.20
names(af1)
colnames(af1)[6] <- 'MAC.11.20'
names(af1)
af1 <- af1[,-c(7)]
names(af1)
# af1$MAC.21.MAF0.005 <- af1$MAC.21.MAF0.005 + af1$MAF0.005.MAF0.01
# names(af1)
# colnames(af1)[7] <- 'MAC.21.MAF01'
# names(af1)
# af1 <- af1[,-c(8)]
# names(af1)
#
af <- af1
table(af$pop)
head(af)
summary(af$Total)
both <- merge(af, dff, by.x = 'block',
by.y = 'Block', all.x = TRUE)
af <- both
af$N_bp  <- as.numeric(as.character(af$N_bp))
af[which(af$Total < 100),c(1,9,10)]
rem <- levels(droplevels(as.factor(af$block[which(af$Total < 100)])))
rem <- as.numeric(as.character(rem))
rem <-  c(rem, 17)
head(af)
af_new <- c()
for(i in c('NFE', 'EAS', 'AFR', 'SAS')){
temp <-  af[which(af$pop == i),]
for(j in rem){
tmp <- temp[which(temp$block == j |
temp$block == j-1),]
tmp[1,c(2:9,11)] <- colSums(tmp[,c(2:9,11)], na.rm = TRUE)
temp <- temp[-c(which(temp$block == j)),]
temp[which(temp$block == j-1),] <- tmp[1,]
}
af_new <- rbind(af_new, temp)
}
af <- af_new
head(af)
af$Zeros <- rowSums(af == 0)
table(af$Zeros)
dim(af)
summary(af$Total)
afp <- af
for(i in 2:8){
afp[,i] <- (afp[,i]/afp$Total)
}
head(afp)
afp_nfe <- afp[which(afp$pop == 'NFE' & afp$block == 80),]
afp_nfe <- afp[which(afp$pop == 'NFE' & afp$block == 37),]
afp_nfe <- afp[which(afp$pop == 'NFE' & afp$block == 37),]
afp_afr <- afp[which(afp$pop == 'AFR' & afp$block == 37),]
afp_eas <- afp[which(afp$pop == 'EAS' & afp$block == 37),]
afp_sas <- afp[which(afp$pop == 'SAS' & afp$block == 37),]
getwd()
setwd("/Users/megansorenson/Documents/RAREsim/Practice/")
save(afp_nfe)
save(afp_afr)
save(afp_eas)
save(afp_nfe, 'AFS_target_data_NFE.Rdata')
save(afp_afr, 'AFS_target_data_AFR.Rdata')
?save
save(afp_nfe, 'AFS_target_data_NFE.RData')
afs_nfe <- afp[which(afp$pop == 'NFE' & afp$block == 37),]
save(afp_nfe, file = 'AFS_target_data_NFE.RData')
afs_nfe <- afp[which(afp$pop == 'NFE' & afp$block == 37),]
afs_afr <- afp[which(afp$pop == 'AFR' & afp$block == 37),]
afs_eas <- afp[which(afp$pop == 'EAS' & afp$block == 37),]
afs_sas <- afp[which(afp$pop == 'SAS' & afp$block == 37),]
setwd("/Users/megansorenson/Documents/RAREsim/Practice/")
save(afs_nfe, file = 'AFS_target_data_NFE.RData')
save(afs_afr, file = 'AFS_target_data_AFR.RData')
save(afs_eas, file = 'AFS_target_data_EAS.RData')
save(afs_sas, file = 'AFS_target_data_SAS.RData')
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
data("AFS_target_data_NFE")
library(RAREsim)
data("AFS_target_data_NFE")
afs_nfe
knitr::opts_chunk$set(echo = TRUE)
#library(devtools)
#install.packages('RAREsim')
library(RAREsim)
# load the data
data("AFS_target_data_NFE")
data('data/AFS_target_data_AFR.RData')
#library(devtools)
#install.packages('RAREsim')
library(RAREsim)
library(RAREsim)
#library(devtools)
#install.packages('RAREsim')
library(RAREsim)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
setwd("/Users/megansorenson/Documents/RAREsim/Chr19/Updated_files")
df <- read.table('Block_downsampling_file_obs2.txt', header =TRUE)
head(df)
ann <- read.table('Number_bp_per_block.txt', header = TRUE, sep  ='\t')
##### update this annotation to have blocks merged together
df <- merge(df, ann, by.x = 'block', by.y = 'Block', all.x = TRUE)
nlevels(as.factor(df$block))
df$per_kb <- (df$obs_all*1000)/df$N_bp
df$phi <- '.'
df$omega <- '.'
head(df)
tot_num_var_nfe <- df[which(df$pop == 'NFE' & df$block == 37),]
4/8490
(4/8490)*1000
tot_num_var_nfe <- df[which(df$pop == 'NFE' & df$block == 37),c(3,7)]
tot_num_var_nfe <- df[which(df$pop == 'NFE' & df$block == 37), c(3,7)]
tot_num_var_nfe <- df[which(df$pop == 'NFE' & df$block == 37),]
tot_num_var_nfe <- df[which(df$pop == 'nfe' & df$block == 37), c(3,7)]
tot_num_var_nfe <- df[which(df$pop == 'nfe' & df$block == 37), c(3,7)]
tot_num_var_afr <- df[which(df$pop == 'afr' & df$block == 37), c(3,7)]
tot_num_var_eas <- df[which(df$pop == 'eas' & df$block == 37), c(3,7)]
tot_num_var_sas <- df[which(df$pop == 'sas' & df$block == 37), c(3,7)]
setwd('/Users/megansorenson/Documents/RAREsim_package/data/')
save(tot_num_var_nfe, file = 'Total_num_var_target_nfe.RData')
save(tot_num_var_nfe, file = 'Total_num_var_target_nfe.RData')
save(tot_num_var_afr, file = 'Total_num_var_target_afr.RData')
save(tot_num_var_eas, file = 'Total_num_var_target_eas.RData')
save(tot_num_var_sas, file = 'Total_num_var_target_sas.RData')
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
library(RAREsim)
library(devtools)
build()
install()
library(RAREsim)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
data("Total_num_var_target_afr")
library(RAREsim)
data("AFS_target_data_AFR")
data("Total_num_var_target_afr")
afs_afr
Fit_AFS(afs_afr[2:8], 8128, 0.97)
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(RAREsim)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
data("AFS_target_data_AFR")
data("Total_num_var_target_afr")
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
RAREsim
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
library(RAREsim)
data("AFS_target_data_AFR")
data("Total_num_var_target_afr")
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
check()
# load the data
data("AFS_target_data_afr")
library(RAREsim)
data("AFS_target_data_AFR")
data("Total_num_var_target_afr")
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
Fit_AFS(afs_afr[2:8], 8128, 0.97)
afs_afr
data("AFS_target_data_AFR")
data("Total_num_var_target_afr")
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
Fit_AFS(afs_afr[2:8], 8128, 0.97)
afs_afr
data("AFS_target_data_AFR")
#install.packages('RAREsim')
library(RAREsim)
# load the data
data("Total_num_var_target_afr")
# load the data
data("AFS_target_data_AFR")
# load the data
data("AFS_target_data_AFR")
# load the data
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
# load the data
data("AFS_target_data_AFR")
print(afs_afr)
# load the data
data("Total_num_var_target_afr")
print(tot_num_var_afr)
Fit_AFS(afs_afr[2:8], 8128, 0.97)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
build()
install()
document()
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
build()
install()
document()
build()
install()
document()
build()
install()
document()
check()
build()
install()
document()
check()
build()
install()
document()
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
check()
build()
install()
document()
check()
install()
build()
install()
document()
check()
###################
### AFS - fit the blocks data
### Update April 10, 2020
###################
#### step  6 - prepare the AFS data
#### still need to explore multiple starting values
setwd('/Users/megansorenson/Documents/RAREsim/Chr19/Updated_files/')
dff <- read.table('Number_bp_per_block.txt', header = TRUE)
setwd('/Users/megansorenson/Documents/RAREsim/Chr19/AFS/gnomAD/')
af <- c()
for(i in c('NFE', 'EAS', 'AFR', 'SAS')){
temp <- read.table(paste0(i,  '_Block_AFS_gnomAD.txt'),
header = TRUE, sep = '\t')
colnames(temp)[9:10] <- c("MAC.21.MAF0.005", 'MAF0.005.MAF0.01')
temp$pop <- i
af <- rbind(af, temp)
}
######### change the bins:
af1 <- af
head(af1)
colnames(af1)[4] <- 'MAC.3.5'
head(af1)
af1$MAC.3.5 <- af1$MAC.3.5 + af1$MAC.4.5
af1 <- af1[,-c(5)]
head(af1)
af1$MAC.11.15 <- af1$MAC.11.15 + af1$MAC.16.20
names(af1)
colnames(af1)[6] <- 'MAC.11.20'
names(af1)
af1 <- af1[,-c(7)]
names(af1)
# af1$MAC.21.MAF0.005 <- af1$MAC.21.MAF0.005 + af1$MAF0.005.MAF0.01
# names(af1)
# colnames(af1)[7] <- 'MAC.21.MAF01'
# names(af1)
# af1 <- af1[,-c(8)]
# names(af1)
#
af <- af1
table(af$pop)
head(af)
summary(af$Total)
both <- merge(af, dff, by.x = 'block',
by.y = 'Block', all.x = TRUE)
af <- both
af$N_bp  <- as.numeric(as.character(af$N_bp))
af[which(af$Total < 100),c(1,9,10)]
rem <- levels(droplevels(as.factor(af$block[which(af$Total < 100)])))
rem <- as.numeric(as.character(rem))
#### merge blocks 8, 17, 50, 57, and 92 with the blocks below
### also  remove block 17 for only having one gene
rem <-  c(rem, 17)
head(af)
#### just needs  to be done by ancestrty
#### merge columns 2-9
af_new <- c()
for(i in c('NFE', 'EAS', 'AFR', 'SAS')){
temp <-  af[which(af$pop == i),]
for(j in rem){
tmp <- temp[which(temp$block == j |
temp$block == j-1),]
tmp[1,c(2:9,11)] <- colSums(tmp[,c(2:9,11)], na.rm = TRUE)
temp <- temp[-c(which(temp$block == j)),]
temp[which(temp$block == j-1),] <- tmp[1,]
}
af_new <- rbind(af_new, temp)
}
write.table(af_new, 'AFS_data_blocks_merged.txt',
row.names = FALSE, sep  = '\t', quote  = FALSE)
af <- af_new
### count the empty bins
af$Zeros <- rowSums(af == 0)
table(af$Zeros)
dim(af)
summary(af$Total)
afp <- af
for(i in 2:8){
afp[,i] <- (afp[,i]/afp$Total)
}
head(afp)
afs_nfe <- afp[which(afp$pop == 'NFE' & afp$block == 37),]
afs_afr <- afp[which(afp$pop == 'AFR' & afp$block == 37),]
afs_eas <- afp[which(afp$pop == 'EAS' & afp$block == 37),]
afs_sas <- afp[which(afp$pop == 'SAS' & afp$block == 37),]
setwd("/Users/megansorenson/Documents/RAREsim_package/data/")
save(afs_nfe, file = 'afs_nfe.RData')
save(afs_afr, file = 'afs_afr.RData')
save(afs_eas, file = 'afs_eas.RData')
save(afs_sas, file = 'afs_sas.RData')
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
check()
build()
install()
document()
check()
