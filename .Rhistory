for(pop in c('EAS', 'SAS', 'AFR')){ ### no NFE right now
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
for(rep in c(1:100)){
temp <- read.table(paste0(pop,'/Chr',bl,'.Rep', rep,'.count.txt'))
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp >= loop$Start[k] & temp <= loop$End[k]),]
n1 <- length(tmp)
mac[rep,k+2] <- n1
}
mac$rep[rep] <- rep
}
mac4 <- rbind(mac4, mac)
}
}
for(pop in c('EAS', 'SAS', 'AFR', 'NFE')){ ### no NFE right now
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
for(rep in c(1:100)){
temp <- read.table(paste0(pop,'/Chr',bl,'.Rep', rep,'.count.txt'))
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp >= loop$Start[k] & temp <= loop$End[k]),]
n1 <- length(tmp)
mac[rep,k+2] <- n1
}
mac$rep[rep] <- rep
}
mac4 <- rbind(mac4, mac)
}
}
for(pop in c('EAS', 'SAS', 'AFR', 'NFE')){ ### no NFE right now
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
for(rep in c(1:100)){
temp <- read.table(paste0(pop,'/Chr',bl,'.Rep', rep,'.count.txt'))
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp >= loop$Start[k] & temp <= loop$End[k]),]
n1 <- length(tmp)
mac[rep,k+2] <- n1
}
mac$rep[rep] <- rep
}
mac4 <- rbind(mac4, mac)
}
}
#### Pull the AFS information from gnomAD
fit <- as.data.frame(matrix(nrow = 4, ncol = 2))
colnames(fit) <-  c('pop', 'N')
head(fit)
fit$pop <- c('AFR', 'EAS', 'NFE',  'SAS')
fit$N  <- c(8128, 9197, 56885, 15308)
fit
mac_template <- as.data.frame(matrix(nrow=100, ncol = 10))
colnames(mac_template) <- c('block', 'pop', 'Singletons', 'Doubletons', 'MAC=3-5',
'MAC=6-10', 'MAC=11-20',
'MAC=21-MAF005',
'MAF005-MAF01', 'rep')
#### loop defines the bins
loop <- as.data.frame(matrix(nrow=7,  ncol = 2))
colnames(loop) <- c('Start', 'End')
loop$Start <- c(1,2,3,6,11,21,'.')
loop$End <- c(1,2,5,10,20,'.','.')
mac1 <- mac_template
setwd('/Users/megansorenson/Documents/RAREsim/Chrom_comp/')
mac1 <- c()
for(pop in c('EAS', 'SAS', 'AFR', 'NFE')){ ### no NFE right now
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
for(rep in c(1:100)){
temp <- read.table(paste0(pop,'/Chr',bl,'.Rep', rep,'.count.txt'))
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp >= loop$Start[k] & temp <= loop$End[k]),]
n1 <- length(tmp)
mac[rep,k+2] <- n1
}
mac$rep[rep] <- rep
}
mac1 <- rbind(mac1, mac)
}
}
mac1$data <- 'HAPGEN2 with all bp'
setwd('/Users/megansorenson/Documents/RAREsim/Chrom_comp/OG/')
mac4 <- c()
for(pop in c('EAS', 'SAS', 'AFR', 'NFE')){ ### no NFE right now
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
for(rep in c(1:100)){
temp <- read.table(paste0(pop,'/Chr',bl,'.Rep', rep,'.count.txt'))
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp >= loop$Start[k] & temp <= loop$End[k]),]
n1 <- length(tmp)
mac[rep,k+2] <- n1
}
mac$rep[rep] <- rep
}
mac4 <- rbind(mac4, mac)
}
}
mac4$data <- 'HAPGEN2 default'
setwd('/Users/megansorenson/Documents/RAREsim/Chrom_comp/gnomAD/')
mac2 <- c()
for(pop in c('EAS', 'SAS', 'AFR', 'NFE')){
mac <- mac_template
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
temp <- read.table(paste0(pop,'_chr',bl,'.INFO1'),
header = TRUE)
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp[,6] >= loop$Start[k] & temp[,6] <= loop$End[k]),]
n1 <- nrow(tmp)
mac[1,k+2] <- n1
#print(n1)
mac$rep[1] <- '.'
}
mac2 <- rbind(mac2, mac[1,])
}
}
mac2$data <- 'gnomAD'
dp <- as.data.frame(matrix(nrow = 4, ncol = 6))
colnames(dp) <- c('pop', 'phi', 'omega', 'alpha', 'beta', 'b')
dp$pop <- c('AFR', 'EAS', 'NFE',  'SAS')
dp$phi <- c(0.1508, 0.1206, 0.1094, 0.1247)
dp$omega <- c(0.6323, 0.6367, 0.6526, 0.6506)
dp$alpha <- c(1.5883, 1.6656, 1.9470, 1.6977)
dp$beta <- c(-0.3083, -0.2951, 0.1180, -0.2273)
dp$b <- c(0.2872, 0.3137, 0.6676, 0.3564)
### need to actually use  these...
head(fit)
fit$perKb  <- dp$phi*(fit$N^dp$omega)
fit
m <- floor(56885*2*0.01)
#### this needs to be done for each ancestry
fit_ind <- as.data.frame(matrix(nrow=4,  ncol = m))
for(j in 1:4){
for(i in 1:m){
fit_ind[j,i] <- dp$b[j]/((dp$beta[j]+i)^dp$alpha[j])
}
}
dp$Fitted_singletons <- fit_ind[,1]
dp$Fitted_doubletons <- fit_ind[,2]
dp$Fitted_MAC3_5 <- rowSums(fit_ind[,c(3:5)])
dp$Fitted_MAC6_10  <- rowSums(fit_ind[,c(6:10)])
dp$Fitted_MAC11_20  <- rowSums(fit_ind[,c(11:20)])
##### then calculate each individual ancestry for the MAF
dp$Fitted_MAC21_MAF005 <- '.'
dp$Fitted_MAF005_MAF01 <- '.'
### AFR
n005 <- floor(8128*2*.005)
n01 <- floor(8128*2*.01)
dp$Fitted_MAC21_MAF005[which(dp$pop == 'AFR')] <- rowSums(fit_ind[which(dp$pop == 'AFR'),c(21:n005)])
dp$Fitted_MAF005_MAF01[which(dp$pop == 'AFR')] <- rowSums(fit_ind[which(dp$pop == 'AFR'),c((n005+1):n01)])
n005 <- floor(9197*2*.005)
n01 <- floor(9197*2*.01)
dp$Fitted_MAC21_MAF005[which(dp$pop == 'EAS')] <- rowSums(fit_ind[which(dp$pop == 'EAS'),c(21:n005)])
dp$Fitted_MAF005_MAF01[which(dp$pop == 'EAS')] <- rowSums(fit_ind[which(dp$pop == 'EAS'),c((n005+1):n01)])
n005 <- floor(56885*2*.005)
n01 <- floor(56885*2*.01)
dp$Fitted_MAC21_MAF005[which(dp$pop == 'NFE')] <- rowSums(fit_ind[which(dp$pop == 'NFE'),c(21:n005)])
dp$Fitted_MAF005_MAF01[which(dp$pop == 'NFE')] <- rowSums(fit_ind[which(dp$pop == 'NFE'),c((n005+1):n01)])
n005 <- floor(15308*2*.005)
n01 <- floor(15308*2*.01)
dp$Fitted_MAC21_MAF005[which(dp$pop == 'SAS')] <- rowSums(fit_ind[which(dp$pop == 'SAS'),c(21:n005)])
dp$Fitted_MAF005_MAF01[which(dp$pop == 'SAS')] <- rowSums(fit_ind[which(dp$pop == 'SAS'),c((n005+1):n01)])
fit
dp$Fitted_MAC21_MAF005 <- as.numeric(as.character(dp$Fitted_MAC21_MAF005))
dp$Fitted_MAF005_MAF01  <- as.numeric(as.character(dp$Fitted_MAF005_MAF01))
setwd('/Users/megansorenson/Documents/RAREsim/Chrom_comp/')
all <- c()
for(i in c(1,6,9)){
temp <- dp[,c(7:13)]
temp1 <- read.table(paste0('AFR/Chr',i,'.Rep1.count.txt'))
tot  <- (nrow(temp1)/1000)*fit$perKb
for(j in 1:ncol(temp)){
temp[,j] <- temp[,j]*tot
}
temp$chr <- i
temp$pop  <- fit$pop
all <- rbind(all,  temp)
}
setwd('/Users/megansorenson/Documents/RAREsim/Chrom_comp/')
mac3 <- c()
for(pop in c('EAS', 'SAS', 'AFR', 'NFE')){ ## not 'NFE' right now
N <- fit$N[which(fit$pop == pop)]
N005 <- floor(0.005*2*N)
loop$End[6] <- N005
loop$Start[7] <- N005 + 1
N01 <- floor(0.01*2*N)
loop$End[7] <- N01
loop$Start <- as.numeric(loop$Start)
loop$End <- as.numeric(loop$End)
for(bl in  c(1,6,9)){
mac <- mac_template
mac$block <- bl
mac$pop <- pop
for(rep in c(1:100)){
rem_all<-c()
change_all <-  c()
temp <- read.table(paste0(pop,'/Chr',bl,'.Rep', rep,'.count.txt'))
temp$num <-  1:nrow(temp)
for(k in nrow(loop):1){
tmp <-  temp[which(temp$V1 >= loop$Start[k] & temp$V1 <= loop$End[k]),]
##### if there are not any SNVs in the bin, tmp is all NA's...
n1 <- nrow(tmp)
expect <- all[which(all$pop == pop & all$chr == bl),k]  ##expected
#print(expect)
if(n1>0){
p <- expect/n1
}else{
if(expect < 1){next}
if(expect >=1){
p <- expect
}
}
if(p <= 1){
rd <- runif(n1)
rem <- tmp[c(which(rd >= p)),]
#print(rem)
### now need to keep these ones...
rem_all <- rbind(rem_all, rem)
}
if(p>1){
if(k==7){
print(c('Error! Not  enough in biggest bin.', pop, bl, rep, expect, n1))
next}
n2 <- expect  - n1 ### n2 is how many more we need
p1 <- n2/nrow(rem_all)  ### this is the proportion from rem_all
rem_all$rd <- runif(nrow(rem_all))
to_change <- rem_all[which(rem_all$rd  <= p1),]
mac_range <-  c(loop$Start[k]:loop$End[k])
to_change$new_MAC <- sample(mac_range, nrow(to_change),
replace = TRUE)
### change them within the MAC file.
####  this needs to change for the haplotype file!!!
temp$V1[which(temp$num %in% to_change$num)]<- to_change$new_MAC
rem_all <- rem_all[which(rem_all$rd > p1),]
change_all<- rbind(change_all,  to_change)
}
}
temp <- temp[-c(rem_all$num),]
##### At this point, set rem_all to all reference alleles in haplotype files
##### And set change_all to the given MAC
#####  ok, now I need the allele count to add to the plot
for(k in 1:nrow(loop)){
tmp <-  temp[which(temp$V1 >= loop$Start[k] & temp$V1 <= loop$End[k]),]
n1 <- nrow(tmp)
mac[rep,k+2] <- n1
}
mac$rep[rep] <- rep
}
mac3  <- rbind(mac3,mac)
}
}
mac3$data <- 'RAREsim'
head(mac1)
head(mac2)
mac <- rbind(mac1, mac2)
mac <-  rbind(mac, mac3)
mac <- rbind(mac,  mac4)
library(reshape2)
melted_mac <- melt(mac, id = c('block', 'pop', 'data', 'rep'))
head(melted_mac)
table(melted_mac$pop, melted_mac$data)
library(ggplot2)
for(bl in c(1,6,9)){
mm <- melted_mac[which(melted_mac$block  == bl),]
is.numeric(mm$value)
pop <- 'AFR'
p1 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p1)
pop <- 'EAS'
p2 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p2)
pop <- 'NFE'
p3 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p3)
pop <- 'SAS'
p4 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p4)
}
library(gridExtra)
for(bl in c(1,6,9)){
mm <- melted_mac[which(melted_mac$block  == bl),]
is.numeric(mm$value)
pop <- 'AFR'
p1 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p1)
pop <- 'EAS'
p2 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p2)
pop <- 'NFE'
p3 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p3)
pop <- 'SAS'
p4 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p4)
}
for(bl in c(1,6,9)){
mm <- melted_mac[which(melted_mac$block  == bl),]
is.numeric(mm$value)
pop <- 'AFR'
p1 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p1)
pop <- 'EAS'
p2 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p2)
pop <- 'NFE'
p3 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p3)
pop <- 'SAS'
p4 <- ggplot(mm[which(mm$pop == pop),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin')+
theme(axis.text.x = element_text(angle = 25)) +
ggtitle(paste0(pop,': Chr', bl))
print(p4)
}
install.packages('rmarkdown')
library(RAREsim)
AFS_FitTarget
AFS_FitTarget()
install.pp
install.packages(devtools)
install.packages('devtools')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
RAREsim::Fit_AFS()
RAREsim::Fit_AFS()
RAREsim::Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(nloptr)
RAREsim::Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
library(nloptr)
RAREsim::Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(RAREsim)
requite(RAREsim)
require(RAREsim)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
require(RAREsim)
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
library(RAREsim)
#require(RAREsim) #### not sure why we have to attach it...
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
library(RAREsim)
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
library(RAREsim)
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
library(devtools)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
library(RAREsim)
library(nloptr)
Fit_AFS(c(.5,.25,.1,.05,0.04,0.2,0.01), 8128, 0.97)
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
check()
setwd('/Users/megansorenson/Documents/RAREsim_package/')
build()
install()
document()
check()
